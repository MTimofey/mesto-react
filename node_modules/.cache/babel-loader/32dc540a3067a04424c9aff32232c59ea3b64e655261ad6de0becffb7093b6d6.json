{"ast":null,"code":"// импорты\nimport apiAuthorizationToken from \"./apiAuthorizationToken\";\n\n// константа с Апи запросами\nclass Api {\n  constructor({\n    link,\n    headers\n  }) {\n    this._link = link;\n    this._headers = headers;\n  }\n\n  // Метод обработки ответа сервера \n  _serverResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`код ошибки: ${res.status}`);\n    }\n  }\n\n  // Метод получения данных пользователей\n  getUserData() {\n    return fetch(`${this._link}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Метод инициализации карточек сервера \n  getInitialCards() {\n    return fetch(`${this._link}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Метод отправки данных пользователя\n  editCustomProfile(userProfileInfo) {\n    return fetch(`${this._link}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userProfileInfo['userName'],\n        about: userProfileInfo['userPosition']\n      })\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Добавление новой карточки\n  addNewCard(cardData) {\n    console.log(this._headers);\n    return fetch(`${this._link}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData['photoName'],\n        link: cardData['link']\n      })\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Удаление карочки\n  deleteCard(cardId) {\n    return fetch(`${this._link}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Лайк карточки\n  setCardLike(cardId) {\n    return fetch(`${this._link}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Удаление лайка\n  deleteCardLike(cardId) {\n    return fetch(`${this._link}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Аватар(короля) поля фотографии\n  updateAvatar(avatarLink) {\n    return fetch(`${this._link}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink.avatar\n      })\n    }).then(res => {\n      return this._serverResponse(res);\n    });\n  }\n}\nconst api = new Api(apiAuthorizationToken);\n\n// экспорт\nexport default api;","map":{"version":3,"names":["apiAuthorizationToken","Api","constructor","link","headers","_link","_headers","_serverResponse","res","ok","json","Promise","reject","status","getUserData","fetch","then","getInitialCards","editCustomProfile","userProfileInfo","method","body","JSON","stringify","name","about","addNewCard","cardData","console","log","deleteCard","cardId","setCardLike","deleteCardLike","updateAvatar","avatarLink","avatar","api"],"sources":["/Users/Timofey/projects/mesto-react/src/utils/Api.js"],"sourcesContent":["// импорты\nimport apiAuthorizationToken from \"./apiAuthorizationToken\";\n\n// константа с Апи запросами\nclass Api {\n  constructor({ link, headers }) {\n    this._link = link;\n    this._headers = headers;\n  }\n\n  // Метод обработки ответа сервера \n  _serverResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`код ошибки: ${res.status}`);\n    }\n  }\n\n  // Метод получения данных пользователей\n  getUserData() {\n    return fetch(`${this._link}/users/me`, {\n      headers: this._headers,\n    })\n      .then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Метод инициализации карточек сервера \n  getInitialCards() {\n    return fetch(`${this._link}/cards`, {\n      headers: this._headers,\n    })\n      .then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Метод отправки данных пользователя\n  editCustomProfile(userProfileInfo) {\n    return fetch(`${this._link}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ name: userProfileInfo['userName'], about: userProfileInfo['userPosition'] }),\n    })\n    .then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Добавление новой карточки\n  addNewCard(cardData) {\n    console.log(this._headers);\n    return fetch(`${this._link}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ \n        name: cardData['photoName'],\n        link: cardData['link'], \n      }),\n    })\n    .then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n  \n  // Удаление карочки\n  deleteCard(cardId) {\n    return fetch(`${this._link}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Лайк карточки\n  setCardLike(cardId) {\n    return fetch(`${this._link}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Удаление лайка\n  deleteCardLike(cardId) {\n    return fetch(`${this._link}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n\n  // Аватар(короля) поля фотографии\n  updateAvatar(avatarLink) {\n    return fetch(`${this._link}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({avatar: avatarLink.avatar}),\n    }).then((res) => {\n      return this._serverResponse(res);\n    });\n  }\n}\n\nconst api = new Api(apiAuthorizationToken)\n\n// экспорт\nexport default api\n"],"mappings":"AAAA;AACA,OAAOA,qBAAqB,MAAM,yBAAyB;;AAE3D;AACA,MAAMC,GAAG,CAAC;EACRC,WAAWA,CAAC;IAAEC,IAAI;IAAEC;EAAQ,CAAC,EAAE;IAC7B,IAAI,CAACC,KAAK,GAAGF,IAAI;IACjB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;;EAEA;EACAG,eAAeA,CAACC,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,eAAcJ,GAAG,CAACK,MAAO,EAAC,CAAC;IACpD;EACF;;EAEA;EACAC,WAAWA,CAAA,EAAG;IACZ,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,WAAU,EAAE;MACrCD,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CACCU,IAAI,CAAER,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACAS,eAAeA,CAAA,EAAG;IAChB,OAAOF,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,QAAO,EAAE;MAClCD,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CACCU,IAAI,CAAER,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACAU,iBAAiBA,CAACC,eAAe,EAAE;IACjC,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,WAAU,EAAE;MACrCe,MAAM,EAAE,OAAO;MACfhB,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEL,eAAe,CAAC,UAAU,CAAC;QAAEM,KAAK,EAAEN,eAAe,CAAC,cAAc;MAAE,CAAC;IACpG,CAAC,CAAC,CACDH,IAAI,CAAER,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACAkB,UAAUA,CAACC,QAAQ,EAAE;IACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvB,QAAQ,CAAC;IAC1B,OAAOS,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,QAAO,EAAE;MAClCe,MAAM,EAAE,MAAM;MACdhB,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEG,QAAQ,CAAC,WAAW,CAAC;QAC3BxB,IAAI,EAAEwB,QAAQ,CAAC,MAAM;MACvB,CAAC;IACH,CAAC,CAAC,CACDX,IAAI,CAAER,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACAsB,UAAUA,CAACC,MAAM,EAAE;IACjB,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,UAAS0B,MAAO,EAAC,EAAE;MAC5CX,MAAM,EAAE,QAAQ;MAChBhB,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACU,IAAI,CAAER,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACAwB,WAAWA,CAACD,MAAM,EAAE;IAClB,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,UAAS0B,MAAO,QAAO,EAAE;MAClDX,MAAM,EAAE,KAAK;MACbhB,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACU,IAAI,CAAER,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACAyB,cAAcA,CAACF,MAAM,EAAE;IACrB,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,UAAS0B,MAAO,QAAO,EAAE;MAClDX,MAAM,EAAE,QAAQ;MAChBhB,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACU,IAAI,CAAER,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;;EAEA;EACA0B,YAAYA,CAACC,UAAU,EAAE;IACvB,OAAOpB,KAAK,CAAE,GAAE,IAAI,CAACV,KAAM,kBAAiB,EAAE;MAC5Ce,MAAM,EAAE,OAAO;MACfhB,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACa,MAAM,EAAED,UAAU,CAACC;MAAM,CAAC;IAClD,CAAC,CAAC,CAACpB,IAAI,CAAER,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;AACF;AAEA,MAAM6B,GAAG,GAAG,IAAIpC,GAAG,CAACD,qBAAqB,CAAC;;AAE1C;AACA,eAAeqC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}